[{"path":"https://maurolepore.github.io/ropensciutils/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 ropensciutils authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://maurolepore.github.io/ropensciutils/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mauro Lepore. Author, maintainer.","code":""},{"path":"https://maurolepore.github.io/ropensciutils/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lepore M (2025). ropensciutils: Package (One Line, Title Case). R package version 0.0.0.9000, https://maurolepore.github.io/ropensciutils/.","code":"@Manual{,   title = {ropensciutils: What the Package Does (One Line, Title Case)},   author = {Mauro Lepore},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://maurolepore.github.io/ropensciutils/}, }"},{"path":"https://maurolepore.github.io/ropensciutils/index.html","id":"ropensciutils","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal ropensciutils collect personal utilities ropensci.","code":""},{"path":"https://maurolepore.github.io/ropensciutils/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version ropensciutils GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"maurolepore/ropensciutils\")"},{"path":"https://maurolepore.github.io/ropensciutils/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"What the Package Does (One Line, Title Case)","text":"Includes apps","code":"library(ropensciutils)  editor_template_impl() #> ### Editor checks: #>  #> - [ ] **Documentation**: The package has sufficient documentation available online (README, pkgdown docs) to allow for an assessment of functionality and scope without installing the package. In particular, #>     - [ ] Is the case for the package well made? #>     - [ ] Is the reference index page clear (grouped by topic if necessary)? #>     - [ ] Are vignettes readable, sufficiently detailed and not just perfunctory? #> - [ ] **Fit**: The package meets criteria for [fit](https://devguide.ropensci.org/policies.html#package-categories) and [overlap](https://devguide.ropensci.org/policies.html#overlap). #> - [ ] **Installation instructions:** Are installation instructions clear enough for human users? #> - [ ] **Tests**: If the package has some interactivity / HTTP / plot production etc. are the tests using [state-of-the-art tooling](https://devguide.ropensci.org/building.html#testing)? #> - [ ] **Contributing information**: Is the documentation for contribution clear enough e.g. tokens for tests, playgrounds? #> - [ ] **License:** The package has a CRAN or OSI accepted license. #> - [ ] **Project management**: Are the issue and PR trackers in a good shape, e.g. are there outstanding bugs, is it clear when feature requests are meant to be tackled? #> --- #>  #> #### Editor comments #>  #> ---  formals(slack_editors) #> $package_review_issue_url #> [1] \"https://github.com/ropensci/software-review/issues/000\" #>  #> $package_repo_url #> [1] \"https://github.com/jhondoe/coolr\" #>  #> $type #> [1] \"standard\" #>  #> $category #> [1] \"category 'workflow automation'\" #>  #> $package #> [1] \"coolr\" #>  #> $package_does #> [1] \"does cool things in R\" #>  #> $package_check_shows #> [1] \"this package is in top shape\" #>  #> $in_scope_because #> [1] \"it streamlines necessary processes\" #>  #> $my_checks_show #> [1] \"the package is awesome\" #>  #> $my_checks_url #> [1] \"https://github.com/ropensci/software-review/issues/000#issuecomment-0000000000\" #>  #> $category_description #> [1] \"Tools that automate and link together workflows, such as build systems and tools to manage continuous integration. Does not include general tools for literate programming. (e.g., R markdown extensions not under the previous topics). (Example: drake)\" # Using `#| comment: \"\"` slack_editors() Dear @editors we have a new standard submission under the category 'workflow automation' (description below).  'coolr' does cool things in R. I believe it's in scope because it streamlines necessary processes.  'pkgcheck' shows this package is in top shape. And my own quick preliminary checks suggest the package is awesome (https://github.com/ropensci/software-review/issues/000#issuecomment-0000000000).  If you can take it please double-check it's in scope and of acceptable quality and feel free to disagree with my quick preliminary checks. Then please go ahead and assign yourself with `@ropensci-review-bot assign @username as editor`.  Else I'll come back here after a few days.  ---  - Issue: https://github.com/ropensci/software-review/issues/000 - Repo: https://github.com/jhondoe/coolr  > category 'workflow automation': Tools that automate and link together workflows, such as build systems and tools to manage continuous integration. Does not include general tools for literate programming. (e.g., R markdown extensions not under the previous topics). (Example: drake) -- https://devguide.ropensci.org/softwarereview_policies.html#aims-and-scope if (interactive()) app_email_reviewer()"},{"path":"https://maurolepore.github.io/ropensciutils/reference/editor_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the editor's template — editor_template","title":"Print the editor's template — editor_template","text":"https://devdevguide.netlify.app/editortemplate","code":""},{"path":"https://maurolepore.github.io/ropensciutils/reference/editor_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the editor's template — editor_template","text":"","code":"editor_template()"},{"path":"https://maurolepore.github.io/ropensciutils/reference/editor_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print the editor's template — editor_template","text":"Text.","code":""},{"path":"https://maurolepore.github.io/ropensciutils/reference/editor_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print the editor's template — editor_template","text":"","code":"editor_template() #> ### Checks: #>  #> - [ ] **Documentation**: The package has sufficient documentation available online (README, pkgdown docs) to allow for an assessment of functionality and scope without installing the package. In particular, #>     - [ ] Is the case for the package well made? #>     - [ ] Is the reference index page clear (grouped by topic if necessary)? #>     - [ ] Are vignettes readable, sufficiently detailed and not just perfunctory? #> - [ ] **Fit**: The package meets criteria for [fit](https://devguide.ropensci.org/policies.html#package-categories) and [overlap](https://devguide.ropensci.org/policies.html#overlap). #> - [ ] **Installation instructions:** Are installation instructions clear enough for human users? #> - [ ] **Tests**: If the package has some interactivity / HTTP / plot production etc. are the tests using [state-of-the-art tooling](https://devguide.ropensci.org/building.html#testing)? #> - [ ] **Contributing information**: Is the documentation for contribution clear enough e.g. tokens for tests, playgrounds? #> - [ ] **License:** The package has a CRAN or OSI accepted license. #> - [ ] **Project management**: Are the issue and PR trackers in a good shape, e.g. are there outstanding bugs, is it clear when feature requests are meant to be tackled? #> --- #>  #> #### Comments #>  #> --- #>"},{"path":"https://maurolepore.github.io/ropensciutils/reference/eic_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Editor (pre) checks — eic_check","title":"Editor (pre) checks — eic_check","text":"EiC create first comment following (pre) submission, including template preliminary editor checks.","code":""},{"path":"https://maurolepore.github.io/ropensciutils/reference/eic_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Editor (pre) checks — eic_check","text":"","code":"eic_check(handle = \"johndoe\")  app_eic_check()"},{"path":"https://maurolepore.github.io/ropensciutils/reference/eic_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Editor (pre) checks — eic_check","text":"Text","code":""},{"path":"https://maurolepore.github.io/ropensciutils/reference/eic_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Editor (pre) checks — eic_check","text":"","code":"eic_check() #> @johndoe thanks for sharing your work with rOpenSci. #>  #> I'll share preliminary checks for discussion with the editorial board. #>  #> @johndoe if any of this helps as feedback, it's a good time to make changes. #>  #>  #> ### Checks: #>  #> - [ ] **Documentation**: The package has sufficient documentation available online (README, pkgdown docs) to allow for an assessment of functionality and scope without installing the package. In particular, #>     - [ ] Is the case for the package well made? #>     - [ ] Is the reference index page clear (grouped by topic if necessary)? #>     - [ ] Are vignettes readable, sufficiently detailed and not just perfunctory? #> - [ ] **Fit**: The package meets criteria for [fit](https://devguide.ropensci.org/policies.html#package-categories) and [overlap](https://devguide.ropensci.org/policies.html#overlap). #> - [ ] **Installation instructions:** Are installation instructions clear enough for human users? #> - [ ] **Tests**: If the package has some interactivity / HTTP / plot production etc. are the tests using [state-of-the-art tooling](https://devguide.ropensci.org/building.html#testing)? #> - [ ] **Contributing information**: Is the documentation for contribution clear enough e.g. tokens for tests, playgrounds? #> - [ ] **License:** The package has a CRAN or OSI accepted license. #> - [ ] **Project management**: Are the issue and PR trackers in a good shape, e.g. are there outstanding bugs, is it clear when feature requests are meant to be tackled? #> --- #>  #> #### Comments #>  #> --- #>   if (interactive()) app_eic_check()"},{"path":"https://maurolepore.github.io/ropensciutils/reference/email_reviewer.html","id":null,"dir":"Reference","previous_headings":"","what":"Draft email for a potential reviewer — email_reviewer","title":"Draft email for a potential reviewer — email_reviewer","text":"Draft email potential reviewer","code":""},{"path":"https://maurolepore.github.io/ropensciutils/reference/email_reviewer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draft email for a potential reviewer — email_reviewer","text":"","code":"email_reviewer(   reviewer_name = \"Jane Smith\",   why_reviewer_fits = \"of your experience developing cool things\",   package = \"coolr\",   author_name = \"John Doe\",   package_does = \"does cool things in R\",   package_repo_url = \"https://github.com/jhondoe/coolr\",   package_review_issue_url = \"https://github.com/ropensci/software-review/issues/000\" )  app_email_reviewer()"},{"path":"https://maurolepore.github.io/ropensciutils/reference/email_reviewer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draft email for a potential reviewer — email_reviewer","text":"reviewer_name Reviewer's name. why_reviewer_fits Reason reviewer good fit. package Name package. author_name Author's name. package_does package . package_repo_url URL package repository. package_review_issue_url URL package review issue.","code":""},{"path":"https://maurolepore.github.io/ropensciutils/reference/email_reviewer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draft email for a potential reviewer — email_reviewer","text":"Character. generated email content.","code":""},{"path":"https://maurolepore.github.io/ropensciutils/reference/email_reviewer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draft email for a potential reviewer — email_reviewer","text":"","code":"email_reviewer() #> rOpenSci: Invitation to review the package coolr #>  #> Dear Jane Smith, #>  #> I hope this email finds you well. I'm writing to ask if you would be willing to review a package for rOpenSci. rOpenSci conducts peer review of R packages contributed to our collection in a manner similar to journals. #>  #> The package coolr, by John Doe, does cool things in R. You can find its GitHub repo at https://github.com/jhondoe/coolr and its open-review issue at https://github.com/ropensci/software-review/issues/000. If you accept, note that we ask reviewers to complete reviews in three weeks. (We've found it takes a similar amount of time to review a package as an academic paper.) #>  #> Our [reviewers guide] details what we look for in a package review, and includes links to example reviews. Our standards are detailed in our [packaging guide], and we provide a reviewer [template] for you to use. Please make sure you do not have a [conflict of interest] preventing you from reviewing this package. If you have questions or feedback, feel free to ask me or post to the [rOpenSci forum]. #>  #> Are you able to review? I think you would be a great reviewer because of your experience developing cool things. If I don't hear from you within a week, I will assume you are unavailable. #>  #> Thank you for your time. #>  #> Sincerely, #> Mauro Lepore #>  #> [reviewers guide]: https://devguide.ropensci.org/reviewerguide.html #> [packaging guide]: https://devguide.ropensci.org/building.html #> [template]: https://devguide.ropensci.org/reviewtemplate.html #> [conflict of interest]: https://devguide.ropensci.org/policies.html#coi #> [rOpenSci forum]: https://discuss.ropensci.org/"},{"path":"https://maurolepore.github.io/ropensciutils/reference/invite_full_submission.html","id":null,"dir":"Reference","previous_headings":"","what":"Invite full submission — invite_full_submission","title":"Invite full submission — invite_full_submission","text":"EiC invite full submission.","code":""},{"path":"https://maurolepore.github.io/ropensciutils/reference/invite_full_submission.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Invite full submission — invite_full_submission","text":"","code":"invite_full_submission(   handle = \"johndoe\",   guide_url = \"https://devdevguide.netlify.app/softwarereview_author\" )  app_invite_full_submission()"},{"path":"https://maurolepore.github.io/ropensciutils/reference/invite_full_submission.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Invite full submission — invite_full_submission","text":"Text","code":""},{"path":"https://maurolepore.github.io/ropensciutils/reference/invite_full_submission.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Invite full submission — invite_full_submission","text":"","code":"invite_full_submission() #> Dear @johndoe, thanks for sharing your work with rOpenSci, and for starting with a pre-submission. #>  #> We welcome your full submission. Please take your time to read our [Guide for authors](https://devdevguide.netlify.app/softwarereview_author). #>  #> Now some general recommendations to consider. #>  #> The handling editor's intent is to help you go through the peer-review process as quickly and smoothly as possible. For that they'll look for opportunities to make the best out of the limited reviewer's time. The goal is to shape the package so that reviewers can understand and test it as completely and quickly as possible. #>  #> For example it helps to have: #>  #> * A README with a succinct and strong case for the package, installation instructions that 'just work' on anyone's computers, and at least one meaningful and reproducible example showing code and output. #> * A website so that the editor/reviewers can see the vignettes and function-examples even before they install the package. #> * Tests that are easy and quick to setup and run. #>  #> You can anticipate the requirements by looking at the editor's template: https://devdevguide.netlify.app/editortemplate #>  #> I'll go ahead and close this issue and I look forward to your full submission whenever you're ready.  if (interactive()) app_invite_full_submission()"},{"path":"https://maurolepore.github.io/ropensciutils/reference/ropensciutils-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ropensciutils: What the Package Does (One Line, Title Case) — ropensciutils-package","title":"ropensciutils: What the Package Does (One Line, Title Case) — ropensciutils-package","text":"package (one paragraph).","code":""},{"path":"https://maurolepore.github.io/ropensciutils/reference/ropensciutils-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ropensciutils: What the Package Does (One Line, Title Case) — ropensciutils-package","text":"Maintainer: Mauro Lepore maurolepore@gmail.com (ORCID)","code":""},{"path":"https://maurolepore.github.io/ropensciutils/reference/slack_editors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate email to editors for a new package submission — slack_editors","title":"Generate email to editors for a new package submission — slack_editors","text":"Generate email editors new package submission","code":""},{"path":"https://maurolepore.github.io/ropensciutils/reference/slack_editors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate email to editors for a new package submission — slack_editors","text":"","code":"slack_editors(   package_review_issue_url = \"https://github.com/ropensci/software-review/issues/000\",   package_repo_url = \"https://github.com/jhondoe/coolr\",   type = \"standard\",   category = \"category 'workflow automation'\",   package = \"coolr\",   package_does = \"does cool things in R\",   package_check_shows = \"this package is in top shape\",   in_scope_because = \"it streamlines necessary processes\",   my_checks_show = \"the package is awesome\",   my_checks_url =     \"https://github.com/ropensci/software-review/issues/000#issuecomment-0000000000\",   category_description =     \"Tools that automate and link together workflows, such as build systems and tools to manage continuous integration. Does not include general tools for literate programming. (e.g., R markdown extensions not under the previous topics). (Example: drake)\" )  app_slack_editors()"},{"path":"https://maurolepore.github.io/ropensciutils/reference/slack_editors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate email to editors for a new package submission — slack_editors","text":"package_review_issue_url URL package review issue. package_repo_url URL package repository. type Type submission (e.g., \"standard\"). category Category package (e.g., \"workflow automation\"). package Name package. package_does package . package_check_shows Summary package check results. in_scope_because Reason package scope. my_checks_show Summary preliminary checks performed. my_checks_url URL detailed preliminary checks. category_description Description category.","code":""},{"path":"https://maurolepore.github.io/ropensciutils/reference/slack_editors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate email to editors for a new package submission — slack_editors","text":"Character. generated email content.","code":""},{"path":"https://maurolepore.github.io/ropensciutils/reference/slack_editors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate email to editors for a new package submission — slack_editors","text":"","code":"slack_editors() #> Dear @editors we have a new standard submission under the category 'workflow automation' (description below). #>  #> 'coolr' does cool things in R. I believe it's in scope because it streamlines necessary processes. #>  #> 'pkgcheck' shows this package is in top shape. And my own quick [preliminary checks](my_checks_url) suggest the package is awesome. #>  #> If you can take it please double-check it's in scope and of acceptable quality and feel free to disagree with my quick preliminary checks. Then please go ahead and assign yourself with `@ropensci-review-bot assign @username as editor`. #>  #> Else I'll come back here after a few days. #>  #> --- #>  #> - Issue: https://github.com/ropensci/software-review/issues/000 #> - Repo: https://github.com/jhondoe/coolr #>  #> > category 'workflow automation': Tools that automate and link together workflows, such as build systems and tools to manage continuous integration. Does not include general tools for literate programming. (e.g., R markdown extensions not under the previous topics). (Example: drake) -- https://devguide.ropensci.org/softwarereview_policies.html#aims-and-scope"}]
